{Application 'FC01_CARTOGRAFIA' logic file generated by CSPro}
PROC GLOBAL
valueset home_head_vs;

numeric k;
numeric N, N2,P,L;
numeric correlativoLocales = 0;
numeric correlativoHogares = 0;
numeric inputSearchStruct = 0;
numeric agregarNuevaEstructura = 0;
numeric ocurrenciaAgregada = 0;
alpha(50) inputSearchStrucText;
file tempFile;
map mymap; 


function cerrarSesion()
	savesetting("login", "");
	savesetting("rol", "");
	savesetting("Usuario", "");
	execpff("../Login/Login.pff", stop);
    stop(1);
end;

function guardarParcial()
	savepartial();
	numeric i = warning("Datos almacenados correctamente")
	select("Ok", continue)
	default(1);
end;
{
function editMarker(map m, numeric markerId)

    numeric sel = accept("Edit marker", "Text", "Description", "Remove");
    if sel = 1 then
        string newText = prompt("Enter new icon text");
        if newText <> "" then
            m.setMarkerText(markerId, newText);
        endif;
    elseif sel = 2 then
        string newDescription = prompt("Enter new icon description");
        if newDescription <> "" then
            m.setMarkerDescription(markerId, newDescription);
        endif;
    elseif sel = 3 then
        if accept("Confirm marker removal from the map", "Yes", "No") = 1 then
          m.removeMarker(markerId);
        endif;
    endif;
end;
}
function mostrarPuntosGeoreferencia()
	{ numeric markerId = mymap.addMarker(38.84839, -76.931098);
	 mymap.setMarkerDescription(markerId, "1");
	 mymap.show();}

	Do numeric j = 1 while j <= totocc(SECCIONB) by 1
		if(SB27(j) <> notappl and SB28(j) <> notappl) then
				 numeric lat = SB27(j); 
				 numeric lon = SB28(j);
				numeric markerId = mymap.addMarker(lat,lon); 
				 //mymap.setMarkerDescription(markerId, maketext("%d", SB01(j)));
				 //mymap.setMarkerText(markerId, maketext("%d",SB01(j)));
				  mymap.setMarkerDescription(markerId, maketext("%d",SB01(j)));
				 //mymap.setMarkerImage(markerId, "../Resources/markermap.png");
				 //mymap.setMarkerDescription(markerId, maketext("Estrucura: %d %s ",SB01(j),SB22(j)));
				 //mymap.setMarkerDescription(markerId, maketext("%s",SB22(j)));

				 //mymap.show();	
				 //errmsg("actualizado Latitud %d Longitud %d, Estructura %d, referenciado%d",SB27(j),SB28(j),SB01(j),markerId);
		else
			//errmsg("no hay datos");
		endif;
	enddo;
	numeric i = warning("Los puntos de georreferencia han sido actualziados")
	select("Ok", continue)
	default(1);
end;

function onDragMarker(map dragMap, numeric markerId)
	dragMap.hide();
    numeric lat = dragMap.getMarkerLatitude(markerId);
    numeric lon = dragMap.getMarkerLongitude(markerId);
	numeric lat_ant =SB27(curocc(SECCIONB));
	numeric log_ant =SB28(curocc(SECCIONB));
	
	//numeric markerId = mymap.addMarker(38.84839, -76.931098);
	numeric beforeMarkerId = mymap.addMarker(lat_ant, log_ant);
	//numeric beforeMarkerId = mymap.addMarker(lat_ant, log_ant);
	mymap.removeMarker(beforeMarkerId);
	SB27(curocc(SECCIONB))=lat;
	SB28(curocc(SECCIONB))=lon;
	mymap.clearMarkers();
	//numeric newMarkerId = mymap.addMarker(lat,lon); 
	//mymap.setMarkerDescription(newMarkerId, maketext("%d",SB01(curocc(SECCIONB))));
	mostrarPuntosGeoreferencia();
	//mymap.setMarkerLocation(markerId, lat, lon);
	savepartial();

	mymap.show();
	
	{numeric i = warning("La geo referencia a sido modificada. Latitud: %f, Longitud: %f",lat,lon)
	select("Ok", continue)
	default(1);}
	//dragMap.hide();
end;

function editGeoreference()
	// Declare a map
	if(curocc(SECCIONB) > 0) then
		map dragMap;
		numeric latitud_edit = SB27(curocc(SECCIONB));
		numeric longitud_edit = SB28(curocc(SECCIONB));
		
		// Add a marker to the map at latitude 38.84839, longitude -76.931098
		numeric markerIdMove = dragMap.addMarker(latitud_edit, longitud_edit);
		mymap.setMarkerDescription(markerIdMove, maketext("%d",SB01(curocc(SECCIONB))));

		// Set function that is called on marker drag
		dragMap.setMarkerOnDrag(markerIdMove, onDragMarker(dragMap, markerIdMove));
		dragMap.show();

		// Display the map
	else
		numeric i = warning("Debe seleccionar una estructura")
		select("Ok", continue)
		default(1);
	endif;
end; 


function asignarCorrelativoHogar()
	numeric ultimoHogar ;
	numeric totalOcurrencias = totocc(SECCIONB);
	if(totalOcurrencias = 1) then
		SB10(curocc(SECCIONB)-1) = 1;
	elseif(totalOcurrencias > 1) then
		if(curocc(SECCIONB) > 1 and curocc(SECCIONB) = totalOcurrencias) then
			ultimoHogar = max(SB10);
			if(ultimoHogar = default) then
					SB10(curocc(SECCIONB)-1) = 1;
			else
				if(SB10(curocc(SECCIONB)-1) = notappl) then
					SB10(curocc(SECCIONB)-1) = ultimoHogar +1;
				endif;
			endif;
		endif;
	endif;
end;

function asignarCorrelativoLocal()
	numeric ultimoLocal ;
	numeric totalOcurrencias = totocc(SECCIONB);
	if(totalOcurrencias = 1) then
		SB07(curocc(SECCIONB)-1) = 1;
	elseif(totalOcurrencias > 1) then
		if(curocc(SECCIONB) > 1 and curocc(SECCIONB) = totalOcurrencias) then
			ultimoLocal = max(SB07);
			if(ultimoLocal = default) then
				SB07(curocc(SECCIONB)-1) = 1;
			else
				SB07(curocc(SECCIONB)-1) = ultimoLocal +1;
			endif;
		endif;
	endif;
end;

function corregirCorrelativo()
	numeric totalEstructuras = totocc(SECCIONB);
	numeric actual = 1;
	//move to SB01(totalEstructuras);
	if(totalEstructuras = curocc(SECCIONB)) then
	
		numeric sel = accept("Corregir Correlativo", "Locales", "Hogares");
		if (sel = 1) then
			//Corregir correlativo hogar
		numeric estructura = 1;
		numeric piso = 1;
		numeric local = 1;
		numeric hogar = 1;
		numeric generado = 0;
		numeric contador = 1;
		
		Do numeric j = 1 while j <= totocc(SECCIONB) by 1
				if(SB01(j) <> estructura or SB03(j) <> piso or SB04(j) <> local) then
					generado = 0;
				endif;
			
				if (generado = 0 and SB05(j) in 1,2 and SB06(j) in 1,2,6) then
					SB07(j) = contador;
					contador = contador +1;
					generado  = 1;
				else
					if(SB05(j) in 1,2 and SB06(j) in 1,2,6 and SB07(j-1) <> notappl) then
						SB07(j) = SB07(j-1);
					else
						SB07(j) = notappl;
					endif;
				endif;
				estructura = SB01(j);
				piso = SB03(j);
				local = SB04(j);
		enddo;
			savepartial();
			numeric i = errmsg("Correlativo de locales corregido correctamente")
			select("Ok", continue)
			default(1);
		elseif( sel = 2) then
			//Corregir correlativo hogar
			Do numeric j = 1 while j <= totocc(SECCIONB) by 1
				if SB05(j) in 1,2 and SB06(j) in 1,2,6 then
					SB10(j) = actual;	
					actual = actual +1;
				else
					SB10(j) = notappl;
				endif;
			enddo;
			savepartial();
			numeric i = errmsg("Correlativo de hogares corregido correctamente")
			select("Ok", continue)
			default(1);
			endif;	
	else
		numeric i = errmsg("Debe ubicarse en la ultima estructura existente")
		select("Ok", continue)
		default(1);
	endif;

end;



function clearCurrentStructure()
	if (CUROCC(SECCIONB) >= 1) then 
		k = 0;
		do until k in 1:2
			k = accept("Seguro que limpiar los datos del registro actual.?", "SI", "NO");
		enddo;

		if k=1 then
			SB05(curocc(SECCIONB)) = notappl;
			SB06(curocc(SECCIONB)) = notappl;
			SB11(curocc(SECCIONB)) = notappl;
			SB12(curocc(SECCIONB)) = notappl;
			SB13(curocc(SECCIONB)) = notappl;
			SB14(curocc(SECCIONB)) = notappl;
			SB15(curocc(SECCIONB)) = notappl;
			SB16(curocc(SECCIONB)) = notappl;
			SB17(curocc(SECCIONB)) = notappl;
			SB18(curocc(SECCIONB)) = notappl;
			SB19(curocc(SECCIONB)) = notappl;
			SB20(curocc(SECCIONB)) = notappl;
			SB31(curocc(SECCIONB)) = notappl;
			reenter SB01(curocc(SECCIONB));
		else
			//ENDLEVEL;
		endif;
	
	{
		numeric i = warning("Seguro que limpiar los datos del registro actual.?")
		select("Confirmar", continue,
        "NO",continue)
         default(2);
		if(i = 1) then
			SB02(curocc(SECCIONB)) = notappl;
			reenter SB01(curocc(SECCIONB));
			
		endif;}
	else
		warning("Debe elegir una estructura para limpiar datos")
		select("Ok", continue)
		default(1);
	endif;
end;

function mapClicked() 
	if(totocc(SECCIONB) = 0) then
		warning("Actualmente no cuenta con estructuras creadas.!");
		mymap.hide();
	elseif(CUROCC(SECCIONB) > 0) then
			numeric j = warning("DESEA CAPTURAR LA GEORREFERENCIA?")
			select("CONFIRMAR", continue,
            "NO",continue)
            default(1);
			IF(j = 1) THEN
				numeric lat = mymap.getLastClickLatitude(); 
				numeric lon = mymap.getLastClickLongitude(); 
				SB27(curocc(SECCIONB))=lat;
				SB28(curocc(SECCIONB))=lon;
				numeric markerId = mymap.addMarker(lat,lon); 
				//mymap.setMarkerText(markerId, maketext("%d",SB01(curocc(SECCIONB))));
				//mymap.hide();

				// Declare a map
				//map dragMap;

				// Add a marker to the map at latitude 38.84839, longitude -76.931098
				//numeric markerIdMove = dragMap.addMarker(lat, lon);

				// Set function that is called on marker drag
				//dragMap.setMarkerOnDrag(markerIdMove, onDragMarker(dragMap, markerIdMove));
				

				// Display the map
				//dragMap.show();
				//mymap.setMarkerImage(markerId, "../Resources/markermap3.png");
				mymap.setMarkerDescription(markerId, maketext("%d",SB01(curocc(SECCIONB))));
				//mymap.setMarkerDescription(markerId, maketext("%s",SB22(curocc(SECCIONB))));
				mymap.hide();
				skip to SB25;
			ENDIF;
	else
		warning("Debe seleccionar al menos una estructura");
		mymap.hide();
	endif
end; 

function mostrarMapaGoogle()
	//cuando hago click en el mapa llama a la funcion mapClicked
	mymap.setOnClick(mapClicked()); 
	//despliego el modo satellite
	mymap.setBaseMap(Satellite);
	//Despliego mapa
	mymap.show();
end;

function mostrarMapaOffLine()
	if(CODIGOUPM = "") then
		errmsg("DEBE ELEGIR UN UPM PREVIO");
	else
	//cuando hago click en el mapa llama a la funcion mapClicked
		mymap.setOnClick(mapClicked()); 
	//cuando es offline tengo que cargas las mbtiles	
		string nombreArchivo = "../Maps/"+CODIGOUPM+".mbtiles";
		if fileexist(nombreArchivo) then
			mymap.setBaseMap(nombreArchivo); //Recorte de como se veria con todas la capas de referencia de una UPM
		else
			numeric exitMap = warning("No se encontró un mapa asignado a ese sector, desea cargar el mapa de google?")
			select("CONFIRMAR", continue,
            "NO",continue)
			default(1);
				IF(exitMap = 1) THEN
					mymap.setBaseMap(Satellite);
				else
					reenter;
				ENDIF;
		endif;
		//mymap.setBaseMap("../Maps/Recorte_zona1.mbtiles"); //recorte a partir de la ubicación del INE

	//Despliego mapa
		mymap.show();
	endif;

end;



function registrarUbicacionGps()
	gps(open); // on Android 
	gps(open,3,4800); // on a laptop or Windows tablet; COM3, 4800 baud 
	if gps(read,5) then // a successful attempt at a read, for up to five seconds 
		SB29 =  gps(latitude);
		SB30 = gps(longitude);
	else 
		SB29 = 0;
		SB30 = 0;
	endif; 
	gps(close);
end;

function showHouseholdReportHTML()
		string nombreMunicipio = '';
	
		forcase MUNICIPIOS_DICT(CaseStatus.NotDeleted) where MUNICIPIO_ID = MUPIO do
				nombreMunicipio = NOMBRE_MUNICIPIO;
				break;
		endfor;
		
	string reportFilename = maketext("%sreporte_%d_%d_%d.html", pathname(Application),DEPTO,MUPIO,AREA);
	setfile(tempFile, reportFilename);
	// filewrite(tempFile, "<!doctype html>");
	 filewrite(tempFile, "<html>");
	 filewrite(tempFile, "<head>");
	 filewrite(tempFile, "<style type='text/css'>");
	 filewrite(tempFile, "table, th, td {border: 1px solid black;border-collapse: collapse;padding: 8px}");
	 filewrite(tempFile, "</style>");
	 filewrite(tempFile, "<title>REPORTE DE ESTRUCTURAS</title>");
	 filewrite(tempFile, "</head>");
	 filewrite(tempFile, "<body>");
	 	filewrite(tempFile, "<table>");
			filewrite(tempFile, "<body>");
			filewrite(tempFile, "<table>");
			filewrite(tempFile, "<tbody>");
			filewrite(tempFile, "<tr>");
			filewrite(tempFile, "<td><b>DEPARTAMENTO:</b></td>");
			filewrite(tempFile, "<td>%d - %s</td>",visualvalue(DEPTO),getlabel(DEPTO_VS1,visualvalue(DEPTO)));
			filewrite(tempFile, "<td><b>MUNICIPIO:</b>:</td>");
			filewrite(tempFile, "<td>%d - %s </td>",visualvalue(MUPIO),nombreMunicipio);
			filewrite(tempFile, "<td><b>SECTOR:</b></td>");
			filewrite(tempFile, "<td>%d</td>", visualvalue(SECTOR));
			filewrite(tempFile, "<td><b>AREA:</b>:</td>");
			filewrite(tempFile, "<td>%d</td>",visualvalue(AREA));
			filewrite(tempFile, "</tr>");
			
			filewrite(tempFile, "<tr>");
			filewrite(tempFile, "<td><b>CATEGORIA:</b></td>");
			filewrite(tempFile, "<td>%d - %s</td>",visualvalue(SA01),getlabel(SA01_VS3,visualvalue(SA01)));
			filewrite(tempFile, "<td><b>LUGAR POBLADO:</b>:</td>");
			filewrite(tempFile, "<td>%S</td>",SA02);
			filewrite(tempFile, "<td><b>SUPERVISOR:</b></td>");
			filewrite(tempFile, "<td>%d</td>", visualvalue(SA04));
			filewrite(tempFile, "<td><b>CARTOGRAFO:</b>:</td>");
			filewrite(tempFile, "<td>%d</td>",visualvalue(SA06));
			filewrite(tempFile, "</tr>");
			
			filewrite(tempFile, "</tbody>");
			filewrite(tempFile, "</table>");
		filewrite(tempFile, "</table>");
	 
	filewrite(tempFile, "<p><b>RESUMEN DE ESTRUCTURAS:</b> %d/%d/%d</p>",SA07,SA08,SA09);
	filewrite(tempFile, "<table>");
	filewrite(tempFile, "<thead>");
	filewrite(tempFile, "<tr><th>ESTRUCTURA</th><th>TOTAL DE PISOS</th><th>PISO DESDE</th><th>PISO HASTA</th><th>TOTAL DE LOCALES</th><th>LOCAL ACTUAL NO.</th><th>TIPO DE LOCAL</th><th>CONDICION DE LOCAL</th><th>CORRELATIVO DE LOCAL</th><th>TOTAL DE HOGARES</th><th>HOGAR ACTUAL NO.</th><th>CORRELATIVO HOGAR</th><th>TOTAL DE PERSONAS EN EL HOGAR</th><th>TOTAL HOMBRES</th><th>TOTAL MUJERES</th><th>TOTAL DE PERSONAS DE 0  A 5</th><th>TOTAL DE PERSONAS DE 6 A 14</th><th>TOTAL DE PERSONAS DE 15 A 29</th><th>TOTAL DE PERSONAS DE 30 A 39</th><th>TOTAL DE PERSONAS DE 40 A 49</th><th>TOTAL DE PERSONAS DE 50 A 64</th><th>TOTAL DE PERSONAS DE 65 O MAS</th><th>SEXO DEL JEFE DEL HOGAR</th><th>NOMBRE DEL JEFE DEL HOGAR</th><th>DIRECCION</th><th>CARACTERISTICAS</th><th>LATITUD</th><th>LONGITUD</th></tr>");
	filewrite(tempFile, "</thead>");
	filewrite(tempFile, "<tbody>");
	do numeric i = 1 while i <= totocc(SECCIONB)
		filewrite(tempFile, "<tr>");
		filewrite(tempFile, "<td>%d</td>", visualvalue(sb01(i)));
		filewrite(tempFile, "<td>%d</td>", visualvalue(sb02(i)));
		filewrite(tempFile, "<td>%d</td>", visualvalue(sb03(i)));
		filewrite(tempFile, "<td>%d</td>", visualvalue(SB32(i)));	
		filewrite(tempFile, "<td>%d</td>", visualvalue(sb26(i)));
		filewrite(tempFile, "<td>%d</td>", visualvalue(sb04(i)));
		filewrite(tempFile, "<td>%s</td>", getlabel(sb05_VS2, visualvalue(sb05(i))));
		filewrite(tempFile, "<td>%s</td>", getlabel(sb06_VS1, visualvalue(sb06(i))));
		filewrite(tempFile, "<td>%d</td>", visualvalue(sb07(i)));
		filewrite(tempFile, "<td>%d</td>", visualvalue(sb08(i)));
		filewrite(tempFile, "<td>%d</td>", visualvalue(sb09(i)));
		filewrite(tempFile, "<td>%d</td>", visualvalue(sb10(i)));
		filewrite(tempFile, "<td>%d</td>", visualvalue(sb11(i)));
		filewrite(tempFile, "<td>%d</td>", visualvalue(sb12(i)));
		filewrite(tempFile, "<td>%d</td>", visualvalue(sb13(i)));
		filewrite(tempFile, "<td>%d</td>", visualvalue(sb14(i)));
		filewrite(tempFile, "<td>%d</td>", visualvalue(sb15(i)));
		filewrite(tempFile, "<td>%d</td>", visualvalue(sb16(i)));
		filewrite(tempFile, "<td>%d</td>", visualvalue(sb17(i)));
		filewrite(tempFile, "<td>%d</td>", visualvalue(sb18(i)));
		filewrite(tempFile, "<td>%d</td>", visualvalue(sb19(i)));
		filewrite(tempFile, "<td>%d</td>", visualvalue(sb20(i)));
		filewrite(tempFile, "<td>%d</td>", visualvalue(sb21(i)));
		filewrite(tempFile, "<td>%s</td>", sb22(i));
		filewrite(tempFile, "<td>%s</td>", sb24(i));
		filewrite(tempFile, "<td>%s</td>", sb25(i));
		filewrite(tempFile, "<td>%f</td>", visualvalue(sb27(i)));
		filewrite(tempFile, "<td>%f</td>", visualvalue(sb28(i)));
		filewrite(tempFile, "</tr>");
	enddo;
	filewrite(tempFile, "</tbody>");

	filewrite(tempFile, "</table>");
	filewrite(tempFile, "<p>FIN DEL REPORTE</p>");

	if getos() in 20:29 then
		filewrite(tempFile, "<h2> DISPOSITIVO: %s </h2>",getdeviceid());
	ENDIF;
	filewrite(tempFile, "</body></html>");
	close(tempFile);
	if getos() in 20:29 then
		// Android - use "view:"
		   string DisplayreportFilename = maketext("file://%sreporte_%d_%d_%d.html", pathname(Application),DEPTO,MUPIO,AREA);
		   execsystem(maketext("html:%s", DisplayreportFilename));

		//	errmsg("%s",reportFilename);
			//execsystem("html:https://www.census.gov");
	else // Windows - use "explorer.exe <filename>"
		execsystem(maketext("%sexplorer.exe %s", pathname(Windows), reportFilename));
	endif;
END;


function generar_codigo_unico()

	//DEPARTAMENTO
	String departamentoS = maketext("%d",DEPTO);

	IF length(strip(departamentoS)) = 1 THEN

	departamentoS = "0" + departamentoS;

	ENDIF;

	//errmsg("DEPTO %s", departamentoS );


	//MUNICIPIO
	String municipioS = maketext("%d",MUPIO);

	IF length(strip(municipioS)) = 1 THEN

	municipioS = "0" + municipioS;

	ENDIF;

	//errmsg("MUPIO %s", municipioS );


	//SECTOR
	String sectors = maketext("%d",SECTOR);

	IF length(strip(sectors)) = 1 THEN

	sectors = "0000" + sectors;

	ELSEIF length(strip(sectors)) = 2 THEN
	sectors = "000" + sectors;

	ELSEIF length(strip(sectors)) = 3 THEN
	sectors = "00" + sectors;

	ELSEIF length(strip(sectors)) = 4 THEN
	sectors = "0" + sectors;

	ENDIF;

	//errmsg("SECTOR %s", sectors );
		{
	alpha(15) umpTemp	= "AEE" + maketext("%s",departamentoS) + maketext("%s",municipioS) + maketext("%s",sectors) + "A" + maketext("%d",AREA);
	IF (toupper(CODIGOUPM) <> umpTemp) THEN
		warning("EL UPM INGRESADO NO COICIDE: \nGENERADO: %s \nINGRESADO: %s ",umpTemp,CODIGOUPM)
        select("Correcto", continue)
        default(1);
		IF(CODIGOUPM = "") THEN
			reenter;
		ELSE 
			reenter DEPTO;
		ENDIF;
	ENDIF;
	}
	CODIGOUPM = "AEE" + maketext("%s",departamentoS) + maketext("%s",municipioS) + maketext("%s",sectors) + "A" + maketext("%d",AREA);

	

	//errmsg("CODIGOUNICO %s", CODUNICO );
end;

function createOtherStruct()
	IF (CUROCC(SECCIONB) >= 1) THEN 

			
		numeric i = warning("DESEA AGREGAR OTRA ESTRUCTURA?")
		select("CONFIRMAR", continue,
        "NO",continue)
         default(2);
		IF(i = 1) THEN
			numeric j = CUROCC(SECCIONB) +1;
				ocurrenciaAgregada = j;
			  agregarNuevaEstructura = 1;
			  insert(SECCIONB(j));
			  skip to next SB01;
			  agregarNuevaEstructura = 1;
		ENDIF;
	ELSE
		warning("DEBE CREAR AL MENOS UNA ESTRUCTURA");
	ENDIF;
end;

{
function opernGps()
	gps(open); // on Android 
	gps(open,3,4800); // on a laptop or Windows tablet; COM3, 4800 baud 
	if gps(read,5) then // a successful attempt at a read, for up to five seconds 
		numeric registroActual = CUROCC(SECCIONB);
		if(registroActual > 0) then
			if(SB27(registroActual) <> NOTAPPL AND SB28(registroActual) <> NOTAPPL) then
				numeric jmodifyGps = warning("LA UBICACIÓN CARTOGRAFICA DE ESTA ESTRUCTURA YA SE ENCUENTRA ALMACENADA, DESEA REEMPLAZARLA.?")
				select("CONFIRMAR", continue,
				"NO",SB01(registroActual))
				default(2);
				IF(jmodifyGps) THEN
					SB27(registroActual) = gps(latitude);
					SB28(registroActual) = gps(longitude);
					warning("Ubicación geografica reemplazada exitosamente. Latitud: %f, Longitur: %f",gps(latitude),gps(longitude)); 
				ENDIF;
			else
				SB27(registroActual) = gps(latitude);
				SB28(registroActual) = gps(longitude);
				warning("Ubicación geografica almacenada exitosamente. Latitud: %f, Longitur: %f",gps(latitude),gps(longitude)); 
			endif;
		else
			warning("DEBE SELECCIONAR UNA ESTRUCTURA ESPECIFICA"); 
		endif;

		
	else 
		warning("No se puede obtener señal GPS, ACTIVE SU GPS"); 
	endif; 
	gps(close);
end;
}
function buscarEstructura()
    userbar(get,inputSearchStruct,inputSearchStrucText);
	
	numeric structNumber = tonumber(inputSearchStrucText);
	IF(inputSearchStrucText <> "") THEN
		IF (CUROCC(SECCIONB) > 0 ) THEN 
			IF structNumber <> DEFAULT THEN
				numeric encontrado = 0;
				Do numeric j = 1 while j <= totocc(SECCIONB) by 1
					if(SB01(j) = structNumber) then
						encontrado = 1;
						move to SB01(j) skip;
						BREAK;
					endif;
				enddo;
				if encontrado = 0 then
					warning("ERROR!, NO SE ENCONTRÓ LA ESTRUCTURA INDICADA");
				endif;
			ELSE
				warning("ERROR!, DEBE INGRESAR UN VALOR VALIDO");
			ENDIF;
		ELSE
			warning("ERROR, NO EXISTE NINGUNA ESTRUCTURA REGISTRADA");
		ENDIF;
	ELSE
		warning("ERROR!, DEBE INGRESAR UN VALOR");
	ENDIF;
end;
function firstStructure()
	numeric primeraEstructura= 1;
	move to SB01(primeraEstructura) skip;
end;
function lastStructure()
	numeric ultimaEstructura = totocc(SECCIONB);
	move to SB01(ultimaEstructura) skip;
end;
function beforeStructure()
	numeric anteriorEstructura = CUROCC(SECCIONB) -1;
	if(anteriorEstructura >= 1) then
		move to SB01(anteriorEstructura) skip;
	else
		warning("ERROR!, YA SE ENCUENTRA POSICIONADO EN LA PRIMERA ESTRUCTURA");
	endif;
end;
function afterStructure()
	numeric siguienteEstructura = CUROCC(SECCIONB) +1;
	if (siguienteEstructura <= totocc(SECCIONB)) then
		move to SB01(siguienteEstructura) skip;
	else
		warning("ERROR!, YA SE ENCUENTRA POSICIONADO EN LA ULTIMA ESTRUCTURA");
	endif;
end;
function ingresarEstructura()
	inputSearchStruct = userbar(add field,"     ");
end;


PROC FC01_CARTOGRAFIA_FF

PROC FC01_CARTOGRAFIA_LEVEL
preproc

if loadsetting("login") <> "" and loadsetting("rol") <> ""   then
	if(tonumber(loadsetting("rol")) <> 5 and tonumber(loadsetting("rol")) <> 1) then
		warning("Permiso denegado!")
		select("Ok", continue)
		default(1);
		cerrarSesion();
	endif;
else
	warning("Permiso denegado!")
	select("Ok", continue)
	default(1);
	cerrarSesion();
endif;

	userbar(clear);
	//userbar(set color,0,255,0);     
	userbar(add button,"+ Agregar Estructura",createOtherStruct);
	userbar(add button,"<<- Primera Estructura",firstStructure);
	userbar(add button,"<- Anterior Estructura",beforeStructure);
	userbar(add button,"Siguiente Estructura ->",afterStructure);
	userbar(add button,"Ultima Estructura ->>",lastStructure);
	//userbar(add button,"Limpiar estructura actual",clearCurrentStructure);
	userbar(add button,"Resumen HTML",showHouseholdReportHTML);
	userbar(add button,"Mostrar Mapa OffLine",mostrarMapaOffLine);
	userbar(add button,"Mostrar puntos de referencia",mostrarPuntosGeoreferencia);
	userbar(add button,"Mostrar Mapa Google",mostrarMapaGoogle);
	userbar(add button,"Editar Georreferencia",editGeoreference);
	userbar(add button,"Corregir Correlativos",corregirCorrelativo);
	userbar(add button,"Guardar",guardarParcial);
	//userbar(add button,"Test",asignarCorrelativoHogar);
	//userbar(add spacing,25);
	//userbar(add text,"Encontrar Estructura:");
    //inputSearchStruct = userbar(add field,"     ");	
	//userbar(add button,"BUSCAR",buscarEstructura);
	//userbar(add button,"Guardar Ubicación GPS",opernGps);
	userbar(show);

PROC DEPTO

if $ in 1:22 then

else
	errmsg("El número de departamento se encuentra definido entre 1 y 22");
	reenter;
endif;

if TIEMPO_ENCUESTA_INICIO = notappl then
	TIEMPO_ENCUESTA_INICIO = timestamp();
endif;



PROC MUPIO


PREPROC
valueset municipios;

forcase MUNICIPIOS_DICT(CaseStatus.NotDeleted) where DEPTO_ID = DEPTO do
	    municipios.add(maketext("%d. %s", MUNICIPIO_ID,strip(NOMBRE_MUNICIPIO)), MUNICIPIO_ID );
endfor;

setvalueset (@getsymbol(), municipios);
{
home_head_vs.clear(); 
IF DEPTO =1 THEN
    home_head_vs.add("1.Guatemala",1);
    home_head_vs.add("2.Santa Catarina Pinula",2);
    home_head_vs.add("3.San José Pinula",3);
    home_head_vs.add("4.San José del Golfo",4);
    home_head_vs.add("5.Palencia",5);
    home_head_vs.add("6.Chinautla",6);
    home_head_vs.add("7.San Pedro Ayampuc",7);
    home_head_vs.add("8.Mixco",8);
    home_head_vs.add("9.San Pedro Sacatepéquez",9);
    home_head_vs.add("10.San Juan Sacatepéquez",10);
    home_head_vs.add("11.San Raymundo",11);
    home_head_vs.add("12.Chuarrancho",12);
    home_head_vs.add("13.Fraijanes",13);
    home_head_vs.add("14.INDEFINIDO",14);
    home_head_vs.add("15.Villa Nueva",15);
    home_head_vs.add("16.Villa Canales",16);
    home_head_vs.add("17.San Miguel Petapa",17);
ELSEIF DEPTO =2 THEN
    home_head_vs.add("1.Guastatoya",1);
    home_head_vs.add("2.Morazán",2);
    home_head_vs.add("3.San Agustín Acasaguastlán",3);
    home_head_vs.add("4.San Cristóbal Acasaguastlán",4);
    home_head_vs.add("5.El Jícaro",5);
    home_head_vs.add("6.Sansare",6);
    home_head_vs.add("7.Sanarate",7);
    home_head_vs.add("8.San Antonio La Paz",8);
ELSEIF DEPTO =3 THEN
    home_head_vs.add("1.Antigua Guatemala",1);
    home_head_vs.add("2.Jocotenango",2);
    home_head_vs.add("3.Pastores",3);
    home_head_vs.add("4.Sumpango",4);
    home_head_vs.add("5.Santo Domingo Xenacoj",5);
    home_head_vs.add("6.Santiago Sacatepéquez",6);
    home_head_vs.add("7.San Bartolomé Milpas Altas",7);
    home_head_vs.add("8.San Lucas Sacatepéquez",8);
    home_head_vs.add("9.Santa Lucía Milpas Altas",9);
    home_head_vs.add("10.Magdalena Milpas Altas",10);
    home_head_vs.add("11.Santa María de Jesús",11);
    home_head_vs.add("12.Ciudad Vieja",12);
    home_head_vs.add("13.San Miguel Dueñas",13);
    home_head_vs.add("14.San Juan Alotenango",14);
    home_head_vs.add("15.San Antonio Aguas Calientes",15);
    home_head_vs.add("16.Santa Catarina Barahona",16);
ELSEIF DEPTO =4 THEN
    home_head_vs.add("1.Chimaltenango",1);
    home_head_vs.add("2.San José Poaquil",2);
    home_head_vs.add("3.San Martín Jilotepeque",3);
    home_head_vs.add("4.San Juan Comalapa",4);
    home_head_vs.add("5.Santa Apolonia",5);
    home_head_vs.add("6.Tecpán Guatemala",6);
    home_head_vs.add("7.Patzún",7);
    home_head_vs.add("8.San Miguel Pochuta",8);
    home_head_vs.add("9.Patzicía",9);
    home_head_vs.add("10.Santa Cruz Balanyá",10);
    home_head_vs.add("11.Acatenango",11);
    home_head_vs.add("12.San Pedro Yepocapa",12);
    home_head_vs.add("13.San Andrés Itzapa",13);
    home_head_vs.add("14.Parramos",14);
    home_head_vs.add("15.Zaragoza",15);
    home_head_vs.add("16.El Tejar",16);
ELSEIF DEPTO =5 THEN
    home_head_vs.add("1.Escuintla",1);
    home_head_vs.add("2.Santa Lucía Cotzumalguapa",2);
    home_head_vs.add("3.La Democracia",3);
    home_head_vs.add("4.Siquinalá",4);
    home_head_vs.add("5.Masagua",5);
    home_head_vs.add("6.Tiquisate",6);
    home_head_vs.add("7.La Gomera",7);
    home_head_vs.add("8.Guanagazapa",8);
    home_head_vs.add("9.San José",9);
    home_head_vs.add("10.Iztapa",10);
    home_head_vs.add("11.Palín",11);
    home_head_vs.add("12.San Vicente Pacaya",12);
    home_head_vs.add("13.Nueva Concepción",13);
    home_head_vs.add("14.Sipacate",14);
ELSEIF DEPTO =6 THEN
    home_head_vs.add("1.Cuilapa",1);
    home_head_vs.add("2.Barberena",2);
    home_head_vs.add("3.Santa Rosa de Lima",3);
    home_head_vs.add("4.Casillas",4);
    home_head_vs.add("5.San Rafael Las Flores",5);
    home_head_vs.add("6.Oratorio",6);
    home_head_vs.add("7.San Juan Tecuaco",7);
    home_head_vs.add("8.Chiquimulilla",8);
    home_head_vs.add("9.Taxisco",9);
    home_head_vs.add("10.Santa María Ixhuatán",10);
    home_head_vs.add("11.Guazacapán",11);
    home_head_vs.add("12.Santa Cruz Naranjo",12);
    home_head_vs.add("13.Pueblo Nuevo Viñas",13);
    home_head_vs.add("14.Nueva Santa Rosa",14);
ELSEIF DEPTO =7 THEN
    home_head_vs.add("1.Sololá",1);
    home_head_vs.add("2.San José Chacayá",2);
    home_head_vs.add("3.Santa María Visitación",3);
    home_head_vs.add("4.Santa Lucía Utatlán",4);
    home_head_vs.add("5.Nahualá",5);
    home_head_vs.add("6.Santa Catarina Ixtahuacán",6);
    home_head_vs.add("7.Santa Clara La Laguna",7);
    home_head_vs.add("8.Concepción",8);
    home_head_vs.add("9.San Andrés Semetabaj",9);
    home_head_vs.add("10.Panajachel",10);
    home_head_vs.add("11.Santa Catarina Palopó",11);
    home_head_vs.add("12.San Antonio Palopó",12);
    home_head_vs.add("13.San Lucas Tolimán",13);
    home_head_vs.add("14.Santa Cruz La Laguna",14);
    home_head_vs.add("15.San Pablo La Laguna",15);
    home_head_vs.add("16.San Marcos La Laguna",16);
    home_head_vs.add("17.San Juan La Laguna",17);
    home_head_vs.add("18.San Pedro La Laguna",18);
    home_head_vs.add("19.Santiago Atitlán",19);
ELSEIF DEPTO =8 THEN
    home_head_vs.add("1.Totonicapán",1);
    home_head_vs.add("2.San Cristóbal Totonicapán",2);
    home_head_vs.add("3.San Francisco El Alto",3);
    home_head_vs.add("4.San Andrés Xecul",4);
    home_head_vs.add("5.Momostenango",5);
    home_head_vs.add("6.Santa María Chiquimula",6);
    home_head_vs.add("7.Santa Lucía la Reforma",7);
    home_head_vs.add("8.San Bartolo Aguas Calientes",8);
ELSEIF DEPTO =9 THEN
    home_head_vs.add("1.Quetzaltenango",1);
    home_head_vs.add("2.Salcajá",2);
    home_head_vs.add("3.San Juan Olintepeque",3);
    home_head_vs.add("4.San Carlos Sija",4);
    home_head_vs.add("5.Sibilia",5);
    home_head_vs.add("6.Cabricán",6);
    home_head_vs.add("7.Cajolá",7);
    home_head_vs.add("8.San Miguel Siguilá",8);
    home_head_vs.add("9.San Juan Ostuncalco",9);
    home_head_vs.add("10.San Mateo",10);
    home_head_vs.add("11.Concepción Chiquirichapa",11);
    home_head_vs.add("12.San Martín Sacatepéquez",12);
    home_head_vs.add("13.Almolonga",13);
    home_head_vs.add("14.Cantel",14);
    home_head_vs.add("15.Huitán",15);
    home_head_vs.add("16.Zunil",16);
    home_head_vs.add("17.Colomba Costa Cuca",17);
    home_head_vs.add("18.San Francisco La Unión",18);
    home_head_vs.add("19.El Palmar",19);
    home_head_vs.add("20.Coatepeque",20);
    home_head_vs.add("21.Génova",21);
    home_head_vs.add("22.Flores Costa Cuca",22);
    home_head_vs.add("23.La Esperanza",23);
    home_head_vs.add("24.Palestina de Los Altos",24);
ELSEIF DEPTO =10 THEN
    home_head_vs.add("1.Mazatenango",1);
    home_head_vs.add("2.Cuyotenango",2);
    home_head_vs.add("3.San Francisco Zapotitlán",3);
    home_head_vs.add("4.San Bernardino",4);
    home_head_vs.add("5.San José el Ídolo",5);
    home_head_vs.add("6.Santo Domingo Suchitepéquez",6);
    home_head_vs.add("7.San Lorenzo",7);
    home_head_vs.add("8.Samayac",8);
    home_head_vs.add("9.San Pablo Jocopilas",9);
    home_head_vs.add("10.San Antonio Suchitepéquez",10);
    home_head_vs.add("11.San Miguel Panán",11);
    home_head_vs.add("12.San Gabriel",12);
    home_head_vs.add("13.Chicacao",13);
    home_head_vs.add("14.Patulul",14);
    home_head_vs.add("15.Santa Bárbara",15);
    home_head_vs.add("16.San Juan Bautista",16);
    home_head_vs.add("17.Santo Tomas La Unión",17);
    home_head_vs.add("18.Zunilito",18);
    home_head_vs.add("19.Pueblo Nuevo",19);
    home_head_vs.add("20.Río Bravo",20);
    home_head_vs.add("21.San José La Máquina",21);
ELSEIF DEPTO =11 THEN
    home_head_vs.add("1.Retalhuleu",1);
    home_head_vs.add("2.San Sebastián",2);
    home_head_vs.add("3.Santa Cruz Muluá",3);
    home_head_vs.add("4.San Martín Zapotitlán",4);
    home_head_vs.add("5.San Felipe",5);
    home_head_vs.add("6.San Andrés Villa Seca",6);
    home_head_vs.add("7.Champerico",7);
    home_head_vs.add("8.Nuevo San Carlos",8);
    home_head_vs.add("9.El Asintal",9);
ELSEIF DEPTO =12 THEN
    home_head_vs.add("1.San Marcos",1);
    home_head_vs.add("2.San Pedro Sacatepéquez",2);
    home_head_vs.add("3.San Antonio Sacatepéquez",3);
    home_head_vs.add("4.Comitancillo",4);
    home_head_vs.add("5.San Miguel Ixtahuacán",5);
    home_head_vs.add("6.Concepción Tutuapa",6);
    home_head_vs.add("7.Tacaná",7);
    home_head_vs.add("8.Sibinal",8);
    home_head_vs.add("9.Tajumulco",9);
    home_head_vs.add("10.Tejutla",10);
    home_head_vs.add("11.San Rafael Pie de la Cuesta",11);
    home_head_vs.add("12.Nuevo Progreso",12);
    home_head_vs.add("13.El Tumbador",13);
    home_head_vs.add("14.San José el Rodeo",14);
    home_head_vs.add("15.Malacatán",15);
    home_head_vs.add("16.Catarina",16);
    home_head_vs.add("17.Ayutla",17);
    home_head_vs.add("18.Ocós",18);
    home_head_vs.add("19.San Pablo",19);
    home_head_vs.add("20.El Quetzal",20);
    home_head_vs.add("21.La Reforma",21);
    home_head_vs.add("22.Pajapita",22);
    home_head_vs.add("23.Ixchiguán",23);
    home_head_vs.add("24.San José Ojetenam",24);
    home_head_vs.add("25.San Cristóbal Cucho",25);
    home_head_vs.add("26.Sipacapa",26);
    home_head_vs.add("27.Esquipulas Palo Gordo",27);
    home_head_vs.add("28.Río Blanco",28);
    home_head_vs.add("29.San Lorenzo",29);
    home_head_vs.add("30.La Blanca",30);
ELSEIF DEPTO =13 THEN
    home_head_vs.add("1.Huehuetenango",1);
    home_head_vs.add("2.Chiantla",2);
    home_head_vs.add("3.Malacatancito",3);
    home_head_vs.add("4.Cuilco",4);
    home_head_vs.add("5.Nentón",5);
    home_head_vs.add("6.San Pedro Necta",6);
    home_head_vs.add("7.Jacaltenango",7);
    home_head_vs.add("8.San Pedro Soloma",8);
    home_head_vs.add("9.San Ildefonso Ixtahuacán",9);
    home_head_vs.add("10.Santa Bárbara",10);
    home_head_vs.add("11.La Libertad",11);
    home_head_vs.add("12.La Democracia",12);
    home_head_vs.add("13.San Miguel Acatán",13);
    home_head_vs.add("14.San Rafael La Independencia",14);
    home_head_vs.add("15.Todos Santos Cuchumatán",15);
    home_head_vs.add("16.San Juan Atitán",16);
    home_head_vs.add("17.Santa Eulalia",17);
    home_head_vs.add("18.San Mateo Ixtatán",18);
    home_head_vs.add("19.Colotenango",19);
    home_head_vs.add("20.San Sebastián Huehuetenango",20);
    home_head_vs.add("21.Tectitán",21);
    home_head_vs.add("22.Concepción Huista",22);
    home_head_vs.add("23.San Juan Ixcoy",23);
    home_head_vs.add("24.San Antonio Huista",24);
    home_head_vs.add("25.San Sebastián Coatán",25);
    home_head_vs.add("26.Santa Cruz Barillas",26);
    home_head_vs.add("27.Aguacatán",27);
    home_head_vs.add("28.San Rafael Petzal",28);
    home_head_vs.add("29.San Gaspar Ixchil",29);
    home_head_vs.add("30.Santiago Chimaltenango",30);
    home_head_vs.add("31.Santa Ana Huista",31);
    home_head_vs.add("32.Unión Cantinil",32);
    home_head_vs.add("33.Petatán",33);
ELSEIF DEPTO =14 THEN
    home_head_vs.add("1.Santa Cruz del Quiché",1);
    home_head_vs.add("2.Chiché",2);
    home_head_vs.add("3.Chinique",3);
    home_head_vs.add("4.Zacualpa",4);
    home_head_vs.add("5.Chajul",5);
    home_head_vs.add("6.Santo Tomás Chichicastenango",6);
    home_head_vs.add("7.Patzité",7);
    home_head_vs.add("8.San Antonio Ilotenango",8);
    home_head_vs.add("9.San Pedro Jocopilas",9);
    home_head_vs.add("10.Cunén",10);
    home_head_vs.add("11.San Juan Cotzal",11);
    home_head_vs.add("12.Joyabaj",12);
    home_head_vs.add("13.Santa María Nebaj",13);
    home_head_vs.add("14.San Andrés Sajcabajá",14);
    home_head_vs.add("15.San Miguel Uspantán",15);
    home_head_vs.add("16.Sacapulas",16);
    home_head_vs.add("17.San Bartolomé Jocotenango",17);
    home_head_vs.add("18.Canillá",18);
    home_head_vs.add("19.Chicamán",19);
    home_head_vs.add("20.Playa Grande Ixcán",20);
    home_head_vs.add("21.Pachalum",21);
ELSEIF DEPTO =15 THEN
    home_head_vs.add("1.Salamá",1);
    home_head_vs.add("2.San Miguel Chicaj",2);
    home_head_vs.add("3.Rabinal",3);
    home_head_vs.add("4.Cubulco",4);
    home_head_vs.add("5.Granados",5);
    home_head_vs.add("6.Santa Cruz El Chol",6);
    home_head_vs.add("7.San Jerónimo",7);
    home_head_vs.add("8.Purulhá",8);
ELSEIF DEPTO =16 THEN
    home_head_vs.add("1.Cobán",1);
    home_head_vs.add("2.Santa Cruz Verapaz",2);
    home_head_vs.add("3.San Cristóbal Verapaz",3);
    home_head_vs.add("4.Tactic",4);
    home_head_vs.add("5.Tamahú",5);
    home_head_vs.add("6.San Miguel Tucurú",6);
    home_head_vs.add("7.Panzós",7);
    home_head_vs.add("8.Senahú",8);
    home_head_vs.add("9.San Pedro Carchá",9);
    home_head_vs.add("10.San Juan Chamelco",10);
    home_head_vs.add("11.San Agustín Lanquín",11);
    home_head_vs.add("12.Santa María Cahabón",12);
    home_head_vs.add("13.Chisec",13);
    home_head_vs.add("14.Chahal",14);
    home_head_vs.add("15.Fray Bartolomé de Las Casas",15);
    home_head_vs.add("16.Santa Catalina La Tinta",16);
    home_head_vs.add("17.Raxruhá",17);
ELSEIF DEPTO =17 THEN
    home_head_vs.add("1.Flores",1);
    home_head_vs.add("2.San José",2);
    home_head_vs.add("3.San Benito",3);
    home_head_vs.add("4.San Andrés",4);
    home_head_vs.add("5.La Libertad",5);
    home_head_vs.add("6.San Francisco",6);
    home_head_vs.add("7.Santa Ana",7);
    home_head_vs.add("8.Dolores",8);
    home_head_vs.add("9.San Luis",9);
    home_head_vs.add("10.Sayaxché",10);
    home_head_vs.add("11.Melchor de Mencos",11);
    home_head_vs.add("12.Poptún",12);
    home_head_vs.add("13.Las Cruces",13);
    home_head_vs.add("14.El Chal",14);
ELSEIF DEPTO =18 THEN
    home_head_vs.add("1.Puerto Barrios",1);
    home_head_vs.add("2.Livingston",2);
    home_head_vs.add("3.El Estor",3);
    home_head_vs.add("4.Morales",4);
    home_head_vs.add("5.Los Amates",5);
ELSEIF DEPTO =19 THEN
    home_head_vs.add("1.Zacapa",1);
    home_head_vs.add("2.Estanzuela",2);
    home_head_vs.add("3.Río Hondo",3);
    home_head_vs.add("4.Gualán",4);
    home_head_vs.add("5.Teculután",5);
    home_head_vs.add("6.Usumatlán",6);
    home_head_vs.add("7.Cabañas",7);
    home_head_vs.add("8.San Diego",8);
    home_head_vs.add("9.La Unión",9);
    home_head_vs.add("10.Huité",10);
    home_head_vs.add("11.San Jorge",11);
ELSEIF DEPTO =20 THEN
    home_head_vs.add("1.Chiquimula",1);
    home_head_vs.add("2.San José La Arada",2);
    home_head_vs.add("3.San Juan Ermita",3);
    home_head_vs.add("4.Jocotán",4);
    home_head_vs.add("5.Camotán",5);
    home_head_vs.add("6.Olopa",6);
    home_head_vs.add("7.Esquipulas",7);
    home_head_vs.add("8.Concepción Las Minas",8);
    home_head_vs.add("9.Quezaltepeque",9);
    home_head_vs.add("10.San Jacinto",10);
    home_head_vs.add("11.Ipala",11);
ELSEIF DEPTO =21 THEN
    home_head_vs.add("1.Jalapa",1);
    home_head_vs.add("2.San Pedro Pinula",2);
    home_head_vs.add("3.San Luis Jilotepeque",3);
    home_head_vs.add("4.San Manuel Chaparrón",4);
    home_head_vs.add("5.San Carlos Alzatate",5);
    home_head_vs.add("6.Monjas",6);
    home_head_vs.add("7.Mataquescuintla",7);
ELSEIF DEPTO =22 THEN
    home_head_vs.add("1.Jutiapa",1);
    home_head_vs.add("2.El Progreso",2);
    home_head_vs.add("3.Santa Catarina Mita",3);
    home_head_vs.add("4.Agua Blanca",4);
    home_head_vs.add("5.Asunción Mita",5);
    home_head_vs.add("6.Yupiltepeque",6);
    home_head_vs.add("7.Atescatempa",7);
    home_head_vs.add("8.Jerez",8);
    home_head_vs.add("9.El Adelanto",9);
    home_head_vs.add("10.Zapotitlán",10);
    home_head_vs.add("11.Comapa",11);
    home_head_vs.add("12.Jalpatagua",12);
    home_head_vs.add("13.Conguaco",13);
    home_head_vs.add("14.Moyuta",14);
    home_head_vs.add("15.Pasaco",15);
    home_head_vs.add("16.San José Acatempa",16);
    home_head_vs.add("17.Quesada",17);
ENDIF;

    setvalueset (MUPIO, home_head_vs);
	
}
PROC SECTOR
PREPROC
valueset db_sectores;

forcase SECTORES_DICT(CaseStatus.NotDeleted) where MUNICIPIOS_MUNICIPIO_ID = MUPIO AND DEPARTAMENTOS_DEPTO_ID = DEPTO  do
	    db_sectores.add(maketext("%d. %s", SECTORES_ID,strip(NOMBRE_SECTOR)), SECTORES_ID );
endfor;

setvalueset (@getsymbol(), db_sectores);
PROC AREA

PREPROC
numeric encontrado = 0;

forcase SECTORES_DICT(CaseStatus.NotDeleted) where MUNICIPIOS_MUNICIPIO_ID = MUPIO AND DEPARTAMENTOS_DEPTO_ID = DEPTO AND SECTORES_ID = SECTOR   do
	    AREA = AREA_ID;
		encontrado = 1;
		noinput;
endfor;


postproc
if $ in 1:2 then

else
	errmsg("El area puede ser 1: Urbana o 2: Rural");
	reenter;
endif
PROC SA04

PROC CODIGOUPM

PREPROC
generar_codigo_unico(); 
noinput;
PROC SA06
PREPROC
IF DEMODE()= ADD THEN
	if(loadsetting("login") <> "") then
		$ = tonumber(loadsetting("login"));
		noinput;
	else
		protect(SA06,false);
	endif;
endif;

POSTPROC 

SA07 = SYSDATE("DD");
SA08 = SYSDATE("MM");
SA09 = SYSDATE("YYYY");
savepartial();
PROC SA02
savepartial();
PROC SECCIONB
N=0;
N2=0;
P=0;
L=0;
 
PROC SB01


preproc

if TIEMPOINICIO_UNIX = notappl then
	TIEMPOINICIO_UNIX = timestamp();
	TIEMPOINICIO_HHMMSS = systime("HHMMSS");
endif;


if demode() = add then
	if (curocc(SECCIONB) = 1) THEN
		$ = 1;
		SB03 = 1;
		SB04 = 1;
		SB09  =1;
		//noinput;
	endif;
endif;


//Esta validacion comienza a partir de la segunda estructura.
if (curocc(SECCIONB) > 1) then
	numeric actual = CUROCC(SECCIONB);
	numeric totalRegistros = totocc (SECCIONB);
	if(actual = totalRegistros) then
		numeric estructuraAnterior = SB01(curocc(SECCIONB)-1);
		numeric totalPisosAnterior = SB02(curocc(SECCIONB)-1);
		numeric pisoInicialAnterior = SB03(curocc(SECCIONB)-1);
		numeric pisoFinalAnterior = SB32(curocc(SECCIONB)-1);
		numeric totalLocalesAnterior = SB26(curocc(SECCIONB)-1);
		numeric numeroAnteriorLocal = SB04(curocc(SECCIONB)-1);
		numeric totalHogaresAnterior = SB08(curocc(SECCIONB)-1);
		numeric numeroAnteriorHogar = SB09(curocc(SECCIONB)-1);
		numeric hogarSiguiente = 0;
		numeric localSiguiete = 0;
		numeric pisoInicialSiguiente = 0;
		//Validamos si queda un hogar por ingresar
		if(numeroAnteriorHogar < totalHogaresAnterior) then
			hogarSiguiente = numeroAnteriorHogar + 1;
				k = 0;
				do until k in 1:2
					string data = concat("Confirme informacion a Digitar \n Hogar no: ",maketext("%d",hogarSiguiente),
					"\n Local no: ", maketext("%d",numeroAnteriorLocal),
					"\n Piso inicial: ", maketext("%d",pisoInicialAnterior),", Piso final: ", maketext("%d",pisoFinalAnterior),
					"\n Estructura no: ", maketext("%d",estructuraAnterior)
					);
					k = accept(data, "SI", "NO");
				enddo;
				if k=1 then
					SB01 = estructuraAnterior;
					SB02 = totalPisosAnterior;
					SB03 = pisoInicialAnterior;
					SB32 = pisoFinalAnterior;
					SB26 = totalLocalesAnterior;
					SB04 = numeroAnteriorLocal;
					SB08 = totalHogaresAnterior;
					SB09 = numeroAnteriorHogar + 1;
					//Asignamos el siguiente correlativo al hogar
					if SB05(curocc(SECCIONB)-1) in 1,2 and SB06(curocc(SECCIONB)-1) in 1,2,6 then
						asignarCorrelativoHogar();
						numeroAnteriorHogar = SB09(curocc(SECCIONB)-1);
						if(numeroAnteriorHogar = 1) then
								asignarCorrelativoLocal();
						endif;
					endif;
				elseif (k=2) then
				numeric	j = 0;
					do until j in 1:2
						j = accept("Desea verificar la información del registro anterior", "SI", "NO");
					enddo;
					if (j=1) then
						move to SB01(curocc(SECCIONB)-1) skip;
					endif;
				endif;
			//Finaliza el if para hogares
		else
			//Asignamos el siguiente correlativo al hogar
				if SB05(curocc(SECCIONB)-1) in 1,2 and SB06(curocc(SECCIONB)-1) in 1,2,6 then
					asignarCorrelativoHogar();
					
					if(numeroAnteriorHogar = 1) then
						asignarCorrelativoLocal();
					endif;
				endif;			
			//Si aun quedan locales para ingresar
			if(numeroAnteriorLocal < totalLocalesAnterior) then
				localSiguiete = numeroAnteriorLocal + 1;
				k = 0;
				do until k in 1:2
					string data = concat("Confirme informacion a Digitar \n Hogar no: ",maketext("1"),
					"\n Local no: ", maketext("%d",localSiguiete),
					"\n Piso inicial: ", maketext("%d",pisoInicialAnterior),", Piso final: ", maketext("%d",pisoFinalAnterior),
					"\n Estructura no: ", maketext("%d",estructuraAnterior)
					);
					k = accept(data, "SI", "NO");
				enddo;
				if k=1 then
					SB01 = estructuraAnterior;
					SB02 = totalPisosAnterior;
					SB03 = pisoInicialAnterior;
					SB32 = pisoFinalAnterior;
					SB26 = totalLocalesAnterior;
					SB04 = localSiguiete;
					SB09 = 1;
					
				elseif (k=2) then
				numeric	j = 0;
					do until j in 1:2
						j = accept("Desea verificar la información del registro anterior", "SI", "NO");
					enddo;
					if (j=1) then
						move to SB01(curocc(SECCIONB)-1) skip;
					endif;
				endif;
				//finaliza la condicion de locales
			else
				//validamos si existe algun piso por ingresar
				if (pisoFinalAnterior < totalPisosAnterior) then
					pisoInicialSiguiente = pisoFinalAnterior + 1;
					k = 0;
					do until k in 1:2
						string data = concat("Confirme informacion a Digitar \n Hogar no: ",maketext("1"),
						"\n Local no: ", maketext("1"),
						"\n Piso inicial: ", maketext("%d",pisoInicialSiguiente),
						"\n Estructura no: ", maketext("%d",estructuraAnterior)
						);
						k = accept(data, "SI", "NO");
					enddo;
					if k=1 then
						SB01 = estructuraAnterior;
						SB02 = totalPisosAnterior;
						SB03 = pisoInicialSiguiente;
						SB04 = 1;
						SB09 = 1;
						
					elseif (k=2) then
					numeric	j = 0;
						do until j in 1:2
							j = accept("Desea verificar la información del registro anterior", "SI", "NO");
						enddo;
						if (j=1) then
							move to SB01(curocc(SECCIONB)-1) skip;
						endif;
					endif;
					//finaliza la validacion de los pisos
					else
					//cambio de estructura
						SB01 = estructuraAnterior +1;
						SB03 = 1;
						SB04 = 1;
						SB09 = 1;

				endif;
			endif;

		endif;

	endif;
	
endif;

//Validamos si existen pisos, locales u hogares por agregar





PROC SB02
POSTPROC
if ($ = 0) then
	numeric i = warning("El número de pisos no puede tener un valor 0?")
	select("CONFIRMAR", continue)
	default(1);
	reenter;
endif;

PROC SB03
preproc
if (curocc(SECCIONB) = 1) then
	$ =1; 
	//noinput;
endif;

POSTPROC
if ($ = 0) then
	numeric i = errmsg("El número de pisos no puede tener un valor 0?")
	select("Corregir", continue)
	default(1);
	reenter;
endif;
IF (SB02 < $) THEN 
	errmsg("El número de piso inicial no puede ser mayor al total de pisos en la estructura \nTotal de pisos: %d \nNúmero de piso inicial: %d",SB02,$)
    select("Corregir", continue)
    default(1);
	reenter;
ENDIF;


PROC SB32
postproc
if ($ = 0) then
	numeric i = warning("El número de pisos no puede tener un valor 0?")
	select("CONFIRMAR", continue)
	default(1);
	reenter;
endif;
if $ < SB03 then
	numeric i = warning("El número de piso final no puede ser menor al número de piso inicial?")
	select("CONFIRMAR", continue)
	default(1);
	reenter;
endif;
if SB02 < $ then
	numeric i = warning("El número de piso final no puede ser mayor al total de pisos existentes en la estructura?")
	select("CONFIRMAR", continue)
	default(1);
	reenter;
endif;
PROC SB26

PROC SB04

POSTPROC
IF $ > SB26 THEN
	warning("EL NÚMERO DE LOCAL NO PUEDE SER SUPERIOR AL TOTAL DE LOCALES \nTOTAL DE LOCALES: %d \nLOCAL NÚMERO: %d",SB26,$)
    select("Corregir", continue)
    default(1);
	reenter;
ENDIF;
PROC SB05

if $ in 1:4 then

else
	errmsg("El tipo de local definido de 1 a 4, revise");
	reenter;
endif;


if $ in 3:4 then
	SB06 = notappl;
	SKIP TO SB22;
endif;

PROC SB06


if $ in 1:6 then

else
	errmsg("La condicion de la vivienda esta definido de 1 a 6, revise");
	reenter;
endif;

{
if $ in 3:5 then
SKIP TO SB22;
endif;
}
{
if $ = 3 or $=4 or $ = 5 then
	SB06 = notappl;
	SB11 = notappl;
	SB12 = notappl;
	SB13 = notappl;
	SB14 = notappl;
	SB15 = notappl;
	SB16 = notappl;
	SB17 = notappl;
	SB18 = notappl;
	SB19 = notappl;
	SB20 = notappl;
	SB31 = notappl;
endif;
}
if $ = 3 then
	SB22 = "OCUPADO TEMPORALMENTE";
SKIP TO SB22;

endif;

if $ = 4 then
	SB22 = "DESOCUPADO";
SKIP TO SB22;
endif;

if $ = 5 then
	SB22 = "EN CONSTRUCCION";
SKIP TO SB22;

endif;

{if $ = 6 then
	SB22 = "AUSENTE";
SKIP TO SB22;
endif;}
PROC SB07




PROC SB08

postproc 
if($ = 0) then
	numeric i = errmsg("El número de hogares no puede tener un valor 0?")
	select("Corregir", continue)
	default(1);
	reenter;
endif;



PROC SB09


POSTPROC 
IF $ > SB08 THEN
		warning("EL NÚMERO DE HOGAR NO PUEDE SER SUPERIOR AL NÚMERO TOTAL DE HOGARES EN EL LOCAL: \nTOTAL DE LOCALES: %d \nNO DE LOCAL: %d ",SB08,$)
        select("Corregir", continue)
        default(1);
		reenter;
ENDIF;



IF SB06 IN 2,6 THEN
	IF SB06 = 6 THEN
		SB22 = "RECHAZO";
	ELSE
		SB22 = "AUSENTE";
	ENDIF;
	SKIP TO SB24;
ENDIF;
PROC SB10

POSTPROC

IF SB01 = 0 THEN
	SKIP TO SB24;
ENDIF;
PROC SB12
POSTPROC
IF $ = NOTAPPL THEN
 $ = 0;
ENDIF;
PROC SB13
POSTPROC
IF $ = NOTAPPL THEN
 $ = 0;
ENDIF;
numeric totalP  = $ + SB12;
if totalP <> SB11 then
	errmsg("La suma del total de hombres y mujeres no es igual al total de personas en el hogar. \nTotal de Personas: %d \nTotal de Hombres: %d \nTotal de mujeres: %d \nSuma de hombres y mujeres: %d",SB11,SB12,$,totalP);
	reenter;
endif;
PROC SB14
POSTPROC
IF $ = NOTAPPL THEN
 $ = 0;
ENDIF;
PROC SB15
POSTPROC
IF $ = NOTAPPL THEN
 $ = 0;
ENDIF;
PROC SB16
POSTPROC
IF $ = NOTAPPL THEN
 $ = 0;
ENDIF;
PROC SB17
POSTPROC
IF $ = NOTAPPL THEN
 $ = 0;
ENDIF;
PROC SB18
POSTPROC
IF $ = NOTAPPL THEN
 $ = 0;
ENDIF;
PROC SB19
POSTPROC
IF $ = NOTAPPL THEN
 $ = 0;
ENDIF;
PROC SB20
POSTPROC
IF $ = NOTAPPL THEN
 $ = 0;
ENDIF;


PROC SB31
POSTPROC
IF $ = NOTAPPL THEN
 $ = 0;
ENDIF;

numeric tot = SB14 + SB15 + SB16 + SB17 + SB18 + SB19 + SB20  + $;

if tot <> SB11 then
	errmsg("La cantidad de personas por edad no es igual al total de personas en el hogar \nTotal de personas en el hogar: %d \nPersonas de 0 a 5: %d \nPersonas de 6 a 14: %d \nPersonas de 15 a 29: %d \nPersonas de 30 a 39: %d \nPersonas de 40 a 49 %d \nPersonas de 50 a 64: %d \nPersonas de 65 o más: %d \nPersonas sin edad: %d \nLa suma total de personas por edad es: %d",SB11,SB14,SB15,SB16,SB17,SB18,SB19,SB20,SB31,tot);
	reenter;
endif
PROC SB21

if $ in 1:2 or $ = notappl then
else
	errmsg("El sexo del jefe del hogar esta definido como: hombre = 1 y mujer = 2, revise.");
	reenter;
endif;

PROC SB24
PREPROC
{
if DEMODE()=ADD then

	IF N = 0 THEN
		 N = N+1;
	ELSE
		IF (CUROCC(SECCIONB) > 1) THEN
					String data = SB24(CUROCC(SECCIONB) -1 );
		$ = data;
		ENDIF;
	ENDIF;
endif;
}



if demode () = Add then
	if curocc(SECCIONB) > 1 then
		if (curocc(SECCIONB)  = totocc(SECCIONB) )then
			if(SB01 = SB01(curocc(SECCIONB)-1))  then
				SB24 = SB24(curocc(SECCIONB)-1);
			endif;
		endif;
	endif;
endif;
PROC MOSTRAR_MAPA
PREPROC
	if(totocc(SECCIONB) > 1) then
		if(curocc(SECCIONB) > 1) then
		numeric estructuraAnterior = SB01(curocc(SECCIONB)-1);
			if(SB01 = estructuraAnterior ) then
				skip to SB25;
			endif;
		endif;
	endif;

POSTPROC
if $=1 then
	
	//cuando hago click en el mapa llama a la funcion mapClicked
	mymap.setOnClick(mapClicked()); 
	//despliego el modo satellite
	mymap.setBaseMap(Satellite);
	//Despliego mapa
	mymap.show();
	
endif;
if $=2 then
//cuando hago click en el mapa llama a la funcion mapClicked
	mymap.setOnClick(mapClicked()); 
//cuando es offline tengo que cargas las mbtiles	
	//mymap.setBaseMap("../Maps/Recorte_zona1.mbtiles"); //recorte a partir de la ubicación del INE
	//mymap.setBaseMap("AEE013805274A1"+"u.mbtiles"); //Recorte de como se veria con todas la capas de referencia de una UPM
	string nombreArchivo = "../Maps/"+CODIGOUPM+".mbtiles";
		if fileexist(nombreArchivo) then
			mymap.setBaseMap(nombreArchivo); //Recorte de como se veria con todas la capas de referencia de una UPM
		else
			numeric exitMap = warning("No se encontró un mapa asignado a ese sector, desea cargar el mapa de google?")
			select("CONFIRMAR", continue,
			"NO",MOSTRAR_MAPA(curocc(SECCIONB)))
			default(1);
				IF(exitMap) THEN
					mymap.setBaseMap(Satellite);
				ENDIF;
		endif;
//Despliego mapa
	mymap.show();
endif;
if $=3 then
	skip to SB25;
endif;
PROC SB25
preproc

if SB05 in 1,2 and SB06 in 1,2,6 then
		string error;
		array string arrayDatos(3,5) =
		"1","SB11",maketext("%d",SB11),"nombre","total de personas en el hogar",
		"2","SB12",maketext("%d",SB12),"nombre","total de hombres en el hogar",
		"3","SB13",maketext("%d",SB13),"nombre","total de mujeres en el hogar";
		numeric z = 1;
		while z <= 3 do
						
			if(arrayDatos(z,3) = "NOTAPPL") then
				errmsg(arrayDatos(z,3));
				if(arrayDatos(z,1) = "1") then
					 error = "La variable: "+arrayDatos(z,5)+" debe contener un valor mayor a 0";
				else
					 error = "La variable: "+arrayDatos(z,5)+" debe contener un valor igual o mayor a 0";
				endif;	
				numeric i = warning(error)
				select("Ok", continue)
				default(1);
				reenter SB11;				
			endif;
			z= z+1;
		enddo;
endif;

if demode () = Add then
	if curocc(SECCIONB) > 1 then
		if (curocc(SECCIONB)  = totocc(SECCIONB) )then
			if(SB01 = SB01(curocc(SECCIONB)-1))  then
				SB25 = SB25(curocc(SECCIONB)-1);
			endif;
		endif;
	endif;
endif;

	if(totocc(SECCIONB) > 0) then
		if(curocc(SECCIONB) > 1) then
		numeric estructuraAnterior = SB01(curocc(SECCIONB)-1);
			if(SB01 = estructuraAnterior ) then
				reenter SB25;
			else
				if(SB27 = notappl or SB28 = notappl) then
					numeric i = warning("No se capturo la georreferencia manual")
					select("Ok", continue)
					default(1);
					reenter MOSTRAR_MAPA;
				endif;
			endif;
		elseif(curocc(SECCIONB) = 1) then
			if(SB27 = notappl or SB28 = notappl) then
				numeric i = warning("No se capturo la georreferencia manual")
				select("Ok", continue)
				default(1);
				reenter MOSTRAR_MAPA;
			endif;
		endif;
	endif;
	


POSTPROC




numeric actual = CUROCC(SECCIONB);
numeric TotalRegistros = totocc (SECCIONB);

if demode() = add and actual = TotalRegistros then
if(getos() <> 10) then
	registrarUbicacionGps();
else
	SB29 = 0;
	SB30 = 0;
endif;

ENDIF;


if TIEMPOFIN_UNIX = notappl then
	TIEMPOFIN_UNIX = timestamp();
	TIEMPOFIN_HHMMSS = systime("HHMMSS");
endif;

savepartial();

TIEMPO_TOTAL = TIEMPOFIN_UNIX - TIEMPOINICIO_UNIX;


